<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:PracticeDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-TleqHW_wvIYc0qLQgZUchA" name="new_practice,_uVnpQB4qEd2bS8fFOQ7WWA" guid="-TleqHW_wvIYc0qLQgZUchA" changeDate="2014-03-05T13:11:16.040+0800" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    演进架构的本质&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    在演进架构实践中，分析影响解决方案的主要技术关注点，并记录架构决策以保证对这些决策进行了评估和沟通。&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    演进架构实践的关键原则：&#xD;
&lt;/h3>&#xD;
&lt;ul type=&quot;disc&quot;>&#xD;
    &lt;li class=&quot;MsoNormal c3&quot;>&#xD;
        &lt;strong>&lt;span class=&quot;c1&quot;>“及时恰当”的进行架构工作。&lt;/span>&lt;/strong>&#xD;
        在策划项目时，和团队一起识别并讨论架构相关问题，并对架构工作及其对应的相关工作划分优先级。优先级基于降低技术风险，而不是创造价值。推迟处理架构问题，在之后“及时恰当”的时间处理它们，以促使架构随时间演变。&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul type=&quot;disc&quot;>&#xD;
    &lt;li class=&quot;MsoNormal c3&quot;>&#xD;
        &lt;span class=&quot;c1&quot;>&lt;strong>记录关键架构决策和突出问题。&lt;/strong>《&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../practice.tech.evolutionary_arch.base/workproducts/architecture_notebook_9BB92433.html&quot;&#xD;
        guid=&quot;_0XAf0MlgEdmt3adZL5Dmdw&quot;>架构备忘录&lt;/a>》（记录架构相关问题的清单）有助于了解已做的架构决策和尚未处理的架构问题。&lt;/span>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul type=&quot;disc&quot;>&#xD;
    &lt;li class=&quot;MsoNormal c3&quot;>&#xD;
        &lt;span&#xD;
        class=&quot;c1&quot;>&lt;strong>实现并测试关键能力（能力包括：功能、性能）来解决架构问题。&lt;/strong>分析架构问题通常不仅要求有关架构的头脑风暴，还包括相关的原型。换句话说：实现足够的代码来验证架构背后的假设。这些代码将成为产品代码，或在证明架构无效后抛弃。&lt;/span>&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
  <additionalInfo>&lt;h3>&#xD;
    更多资源&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    有关演进架构方法的更多信息，参见:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;http://www.agilemodeling.com/essays/agileArchitecture.htm&quot; target=&quot;_blank&quot;>Agile Architecture: Strategies&#xD;
        for Scaling Agile Development&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;http://www.agilemodeling.com/essays/initialArchitectureModeling.htm&quot; target=&quot;_blank&quot;>Architectural&#xD;
        Envisioning&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;http://www.agiledata.org/essays/enterpriseArchitecture.html&quot; target=&quot;_blank&quot;>Agile Enterprise&#xD;
        Architecture&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;br /></additionalInfo>
  <problem>&lt;p>&#xD;
    演进架构实践描述了在软件开发中随着对架构问题的发现和处理如何增量的构建并改善软件架构。这减低了技术风险而不需要巨量的前期架构工作。&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span class=&quot;c1&quot;>此实践：&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        通过减少那些由于架构缺陷而引发的原本在后期发现的、耗时的、易出现的问题，来提升质量和生产力。这是因为在早期对架构进行了验证，并在主要的开发工作完成之前纠正了关键的架构问题。&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        通过关注重用来缩短上市时间。“重用”通过将开发中的教训回馈到架构并在剩下的开发中应用这些教训，来改善系统的一致性和可维护性。&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;MsoNormal c2&quot;>&#xD;
            通过首先识别和解决高风险的技术领域来改善可预测性。它通过在变更发生时缩短架构周期以及最小化耗费在架构废料（指架构中无相关的部分）上的时间和返工，来提升团队的响应能力。&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul></problem>
  <application>&lt;p>&#xD;
    阅读此实践的最佳方式是首先熟悉整体结构，了解：包含了什么内容以及这些内容是如何组织的。&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    随后，回顾此实践的关键概念。其中一个特别重要的概念是：&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>概念：软件架构&lt;/a>。在你理解什么是架构后，将注意力转向《架构备忘录》。接着回顾相关任务，查看每个任务相关的指南与工具指导。你也可以访问直接提供此实践指南的文件夹。&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    一定要看一看附加来源信息中的相关资料。可参见此页中的“更多资源”。&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    如何一步步引入此事件，可参见 &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.tech.evolutionary_arch.base/guidances/roadmaps/how_to_adopt_evolutionary_arch_practice_FEFA2CCF.html&quot;&#xD;
     guid=&quot;_Odpz8NciEdy1nJEYZGzN4A&quot;>路线图：如何引入演进架构实践&lt;/a>。&#xD;
&lt;/p></application>
</org.eclipse.epf.uma:PracticeDescription>
